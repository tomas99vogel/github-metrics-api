openapi: 3.0.3
info:
  title: GitHub Events Metrics API
  version: 1.0.0
paths:
  /metrics/pr-average:
    get:
      summary: Average time between opened Pull Requests
      description: Returns stats for a specific repo when 'repo' is provided; otherwise returns a list of repositories (or null if none).
      parameters:
        - $ref: '#/components/parameters/RepoParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PRAverageStats'
                  - $ref: '#/components/schemas/RepoListOrNull'
              examples:
                withRepo:
                  summary: With repo parameter
                  value:
                    repository: octocat/hello-world
                    pr_count: 3
                    average_time_between_pr: 750.0
                withoutRepo:
                  summary: Without repo parameter
                  value:
                    repositories:
                      - microsoft/vscode
  /metrics/events/count:
    get:
      summary: Count events by type within a time window
      parameters:
        - $ref: '#/components/parameters/OffsetParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventCountResponse'
  /visualization/timeline:
    get:
      summary: Timeline buckets for visualization
      parameters:
        - $ref: '#/components/parameters/HoursParam'
        - $ref: '#/components/parameters/IntervalParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
  /visualisation/timeline:
    get:
      summary: Timeline buckets for visualization (alias)
      parameters:
        - $ref: '#/components/parameters/HoursParam'
        - $ref: '#/components/parameters/IntervalParam'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
components:
  parameters:
    RepoParam:
      name: repo
      in: query
      required: false
      description: Optional. GitHub repository in owner/repo format. If omitted, the API returns a list of repositories (or null if none).
      schema:
        type: string
        pattern: '^[A-Za-z0-9_.-]+\/[A-Za-z0-9_.-]+$'
    OffsetParam:
      name: offset
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
    HoursParam:
      name: hours
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
    IntervalParam:
      name: interval
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
  schemas:
    PRAverageStats:
      type: object
      required: [repository, pr_count, average_time_between_pr]
      properties:
        repository: { type: string }
        pr_count: { type: integer, minimum: 0 }
        average_time_between_pr: { type: number }
    RepoListOrNull:
      type: object
      nullable: true
      required: [repositories]
      properties:
        repositories:
          type: array
          items: { type: string }
    EventCountResponse:
      type: object
      required: [time_range, event_counts, total_events]
      properties:
        time_range:
          type: object
          required: [start_time, end_time, offset_minutes]
          properties:
            start_time: { type: string, format: date-time }
            end_time: { type: string, format: date-time }
            offset_minutes: { type: integer, minimum: 1 }
        event_counts:
          type: object
          additionalProperties: { type: integer, minimum: 0 }
        total_events: { type: integer, minimum: 0 }
    TimelineResponse:
      type: object
      required: [range, buckets]
      properties:
        range:
          type: object
          required: [hours, interval_minutes, start_time, end_time]
          properties:
            hours: { type: integer, minimum: 1 }
            interval_minutes: { type: integer, minimum: 1 }
            start_time: { type: string, format: date-time }
            end_time: { type: string, format: date-time }
        buckets:
          type: array
          items:
            type: object
            required: [start_time, end_time, counts]
            properties:
              start_time: { type: string, format: date-time }
              end_time: { type: string, format: date-time }
              counts:
                type: object
                additionalProperties: { type: integer, minimum: 0 }